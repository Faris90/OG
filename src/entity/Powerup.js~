var Cell = require('./Cell');

function Powerup() {
    Cell.apply(this, Array.prototype.slice.call(arguments));

    this.cellType = 2;
    this.spiked = 1;
    this.fed = 1;
    this.color = {r: 100, g: 100, b: 255};
    this.namee = "Powerup x1";

  this.colors = [
        {'r':255, 'g':  0, 'b':  0}, // Red
        {'r':255, 'g': 32, 'b':  0},
        {'r':255, 'g': 64, 'b':  0},
        {'r':255, 'g': 96, 'b':  0},
        {'r':255, 'g':128, 'b':  0}, // Orange
        {'r':255, 'g':160, 'b':  0},
        {'r':255, 'g':192, 'b':  0},
        {'r':255, 'g':224, 'b':  0},
        {'r':255, 'g':255, 'b':  0}, // Yellow
        {'r':192, 'g':255, 'b':  0},
        {'r':128, 'g':255, 'b':  0},
        {'r': 64, 'g':255, 'b':  0},
        {'r':  0, 'g':255, 'b':  0}, // Green
        {'r':  0, 'g':192, 'b': 64},
        {'r':  0, 'g':128, 'b':128},
        {'r':  0, 'g': 64, 'b':192},
        {'r':  0, 'g':  0, 'b':255}, // Blue
        {'r': 18, 'g':  0, 'b':192},
        {'r': 37, 'g':  0, 'b':128},
        {'r': 56, 'g':  0, 'b': 64},
        {'r': 75, 'g':  0, 'b':130}, // Indigo
        {'r': 92, 'g':  0, 'b':161},
        {'r':109, 'g':  0, 'b':192},
        {'r':126, 'g':  0, 'b':223},
        {'r':143, 'g':  0, 'b':255}, // Purple
        {'r':171, 'g':  0, 'b':192},
        {'r':199, 'g':  0, 'b':128},
        {'r':227, 'g':  0, 'b': 64},
    ];
    this.colorsLength = this.colors.length -1;
    this.speedd = 1; // Speed of color change
}

module.exports = Powerup;
Powerup.prototype = new Cell();

Powerup.prototype.rainb = function() {
    if (typeof this.rainbow == 'undefined') {
        this.rainbow = Math.floor(Math.random() * this.colors.length);
    } 
	
    if (this.rainbow >= this.colorsLength) {
        this.rainbow = 0;
    }
	
    this.color = this.colors[this.rainbow];
    this.rainbow += this.speedd;


};

Powerup.prototype.feed = function(feeder,gameServer) {
    this.setAngle(feeder.getAngle()); // Set direction if the Powerup explodes
    this.fed++; // Increase feed count
    this.namee = "Powerup x"+this.fed;
    gameServer.removeNode(feeder);
if(this.fed>9)
{
this.fed=9;
    this.namee = "Powerup > MAX!!!";
}
};

// Main Functions

Powerup.prototype.getEatingRange = function() {


    return this.getSize() * .4; // 0 for ejected cells
};

Powerup.prototype.onConsume = function(consumer,gameServer) {
   consumer.addMass(this.fed*200);
   consumer.decayMass = this.fed*190;
};

Powerup.prototype.onAdd = function(gameServer) {
    gameServer.nodesVirus.push(this);
};

Powerup.prototype.onRemove = function(gameServer) {
    var index = gameServer.nodesVirus.indexOf(this);
    if (index != -1) {
        gameServer.nodesVirus.splice(index, 1);
    } else {
        console.log("[Warning] Tried to remove a non existing Powerup!");
    }
};

